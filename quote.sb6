# Quote Script for Stormbot TCL 6
#
# Usage:
# Add quote: BOT quote add <quote>
# Delete quote: BOT quote del <id>
# Random quote: BOT quote
# Stats: BOT quote stats
# URL: BOT quote url
# Search: BOT quote search/find <text>
#
# Change Log:
# Please refer to http://github.com/demonicpagan/Stormbot-TCL-Quote-Module for changes made

SB:command add QUOTE 1 -none
sbd:set quote:author "Dustin Shea (demonicpagan@gmail.com)"

# Combined: Global Quote settings (i.e url, file location, auto db backup time)
# and Channel specific storage
SB:register variable global QUOTE QUOTE:*


proc SB:proc_quote {nick host handle chan arg} {
	SB:setvariables

	# Set defaults
	set quote [sbd:reset_defaults [sbd:set QUOTE [list ./scripts/quotedb ~/public_html]]]

	# Help information
	if [string eq -nocase HELP $1] {
		printh $nick "\[QUOTE\]:"
		printh $nick "Store, retrieve, and rank quotes stored through the bot and view via the web."
		printh $nick ""
		printh $nick "\002Commands\002"
		printh $nick "(/msg) $::botnick QUOTE ADD <quote> (Add a quote to the database, for multiline quotes use a single | with a space on each side.)"
		printh $nick "(/msg) $::botnick QUOTE DEL <id> (Delete a quote from the database)"
		printh $nick "(/msg) $::botnick QUOTE STATS (Displays the current number of quotes in the database)"
		printh $nick "(/msg) $::botnick QUOTE SEARCH <text> (Search for quotes in the database)"
		printh $nick "(/msg) $::botnick QUOTE URL (Displays where you can find these quotes on the web)"
		printh $nick "(/msg) $::botnick QUOTE (Will display a random quote, if an ID given, will display that quote)"
		printh $nick "(/msg) $::botnick QUOTE LAST (Displays the last quote submitted to the database)"
		return 0
	}


	switch -glob -- $l1 {
		off - on {
			set true [istrue $l1]
			# Need to put a set default for following line in above - how?
			sbd:set QUOTE:${chan}:OFFON $true
			SB:botdatafile write
			print $nick "The Quote database script is now ON for $chan"
			return 0
		}

		+ - add {
			return 0
		}

		"-" - del* {
			return 0
		}

		find - search {
			return 0
		}

		stats - statistics {
			return 0
		}

		lst - last {
			return 0
		}

		default {
			return 0
		}

	}
}